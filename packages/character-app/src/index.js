'use strict';import React from "react";import ReactDOM from 'react-dom';import {ApolloProvider} from "react-apollo";import {HttpLink} from "apollo-link-http";import ApolloClient from "apollo-client";import {InMemoryCache} from "apollo-cache-inmemory";import {withData} from '../../with';import character_query from './queries/character.graphql';import GurpsClient from '@gurps-graphql/client/src';console.log(gurpsClient.active);const apollo_link = new HttpLink({ //create a HttpLink, this will prevent CORS prob.    uri: 'http://localhost:3000/graphql',    //fetch: fetch //TODO necc for testing (?) put it into test utils?});const client = new ApolloClient({    link: apollo_link,    cache: new InMemoryCache()});const Character = ({data}) => {    const {name, attributes} = data.character;    const stats = attributes.filter(a => a.attribute.position > 0).map(a => a.attribute);    stats.forEach(s => {        console.log(s.baseValue);    });    return <div>        <h2>{name}</h2>        {stats.map((s, i) => <div key={i}>            {s.name}            {s.baseValue}        </div>)}    </div>};const CharacterWithData = withData(Character);class App extends React.Component {    constructor(props) {        super(props);    }    render() {        return (<ApolloProvider client={client}>            <CharacterWithData                query={character_query}                id={'4768990495'}            />        </ApolloProvider>);    }}ReactDOM.render(    <App/>,    document.getElementById('App'));