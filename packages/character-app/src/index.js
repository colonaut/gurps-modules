'use strict';import React from "react";import ReactDOM from 'react-dom';import {ApolloProvider} from "react-apollo";import {HttpLink} from "apollo-link-http";import ApolloClient from "apollo-client";import {InMemoryCache} from "apollo-cache-inmemory";import {withData} from '../../with';import GetStats from './queries/get_stats.graphql';const apollo_link = new HttpLink({ //create a HttpLink, this will prevent CORS prob.    uri: 'http://localhost:3000/graphql',    //fetch: fetch //TODO necc for testing (?) put it into test utils?});const client = new ApolloClient({    link: apollo_link,    cache: new InMemoryCache()});const TestComponent = () => {    return <div>        <p>Test parsed functions</p>    </div>};const Stat = ({stat}) => {    console.log('Stat Component base_value', stat.base_value);    return (<div>        {stat.name} -> {compute(stat.base_value)}    </div>)};const Stats = withData(({data, fetchMore}) => <ul>    {data.stats.map((stat, i) => <Stat key={i} stat={stat}/>)}</ul>);class App extends React.Component {    constructor(props) {        super(props);    }    render() {        return <TestComponent/>        return (<ApolloProvider client={client}>            <Stats query={GetStats} perPage={14}/>        </ApolloProvider>);    }}ReactDOM.render(    <App/>,    document.getElementById('App'));